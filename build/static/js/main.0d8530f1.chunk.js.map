{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","showForm","changeTextAndColor","Task","task","onDelete","onEdit","day","id","Tasks","tasks","map","AddTask","onSave","useState","setText","setDay","onSubmit","e","preventDefault","Swal","fire","icon","title","type","placeholder","value","onChange","target","App","loading","setloading","setTasks","showAddTask","setShowAddTask","useEffect","setTimeout","getTasks","JSON","parse","localStorage","getItem","role","uuidv4","newTask","setItem","stringify","length","deleteTask","filter","prompt","myData","x","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d8530f1.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\r\n    return <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport \"../index.css\";\r\n\r\nconst Header = ({ showForm, changeTextAndColor }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h2 className=\"app-header\">Task Manager App</h2>\r\n            <Button onClick={showForm} color={changeTextAndColor ? 'red' : 'green'} text={changeTextAndColor ? 'Close' : 'Add'} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { FaPencilAlt, FaTimes } from 'react-icons/fa';\r\nimport \"../index.css\"\r\n\r\nconst Task = ({ task, onDelete, onEdit }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"task\">\r\n                <div>\r\n                    <p className=\"taskName\">\r\n                        <span className=\"textBold\">Task Name:</span> {task.text}\r\n                    </p>\r\n                    <p className=\"taskDate\"><span className=\"textBold\">Date of Completion:</span> {task.day}</p>\r\n                </div>\r\n                <div>\r\n                    <p><FaTimes onClick={() => onDelete(task.id)} className=\"delIcon\" /></p>\r\n                    <p><FaPencilAlt onClick={() => onEdit(task.id)} className=\"editIcon\" /></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task';\r\nimport \"../index.css\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onEdit }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onEdit={onEdit} />))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AddTask = ({ onSave }) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text && !day) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Fill in your task and date or close the form!'\r\n            })\r\n        } else if (!text && day) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Fill in your task!'\r\n            })\r\n        } else if (text && !day) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Fill in your date!'\r\n            })\r\n        } else {\r\n            onSave({ text, day });\r\n        }\r\n\r\n        setText('');\r\n        setDay('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"add task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder=\"add day & time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","// Importing Components\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport AddTask from './components/AddTask';\r\n// Importing React Hooks\r\nimport { useState, useEffect } from 'react';\r\n// Importing Packages\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction App() {\r\n    // All States\r\n    const [loading, setloading] = useState(true); // Pre-loader before page renders\r\n    const [tasks, setTasks] = useState([]); // Task State\r\n    const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\r\n\r\n    // Pre-loader\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setloading(false);\r\n        }, 3500);\r\n    }, [])\r\n\r\n    // Fetching from Local Storage\r\n    const getTasks = JSON.parse(localStorage.getItem(\"taskAdded\"));\r\n\r\n    useEffect(() => {\r\n        if (getTasks == null) {\r\n            setTasks([])\r\n        } else {\r\n            setTasks(getTasks);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    // Add Task\r\n    const addTask = (task) => {\r\n        const id = uuidv4();\r\n        const newTask = { id, ...task }\r\n\r\n        setTasks([...tasks, newTask]);\r\n\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Yay...',\r\n            text: 'You have successfully added a new task!'\r\n        })\r\n\r\n        localStorage.setItem(\"taskAdded\", JSON.stringify([...tasks, newTask]));\r\n    }\r\n\r\n    // Delete Task\r\n    const deleteTask = (id) => {\r\n        const deleteTask = tasks.filter((task) => task.id !== id);\r\n\r\n        setTasks(deleteTask);\r\n\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Oops...',\r\n            text: 'You have successfully deleted a task!'\r\n        })\r\n\r\n        localStorage.setItem(\"taskAdded\", JSON.stringify(deleteTask));\r\n    }\r\n\r\n    // Edit Task\r\n    const editTask = (id) => {\r\n\r\n        const text = prompt(\"Task Name\");\r\n        const day = prompt(\"Day and Time\");\r\n        let data = JSON.parse(localStorage.getItem('taskAdded'));\r\n\r\n        const myData = data.map(x => {\r\n            if (x.id === id) {\r\n                return {\r\n                    ...x,\r\n                    text: text,\r\n                    day: day,\r\n                    id: uuidv4()\r\n                }\r\n            }\r\n            return x;\r\n        })\r\n\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Yay...',\r\n            text: 'You have successfully edited an existing task!'\r\n        })\r\n\r\n        localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading\r\n                    ?\r\n                    <div className=\"spinnerContainer\">\r\n                        <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-secondary\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-success\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"container\">\r\n                        {/* App Header that has open and App Name */}\r\n                        <Header showForm={() => setShowAddTask(!showAddTask)} changeTextAndColor={showAddTask} />\r\n\r\n                        {/* Revealing of Add Task Form */}\r\n                        {showAddTask && <AddTask onSave={addTask} />}\r\n\r\n                        {/* Task Counter */}\r\n                        <h3>Number of Tasks: {tasks.length}</h3>\r\n\r\n                        {/* Displaying of Tasks */}\r\n                        {\r\n                            tasks.length > 0\r\n                                ?\r\n                                (<Tasks tasks={tasks} onDelete={deleteTask} onEdit={editTask} />)\r\n                                :\r\n                                ('No Task Found!')\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}